#! /bin/sh

# defaults
name=server
ca=ca
apa=/etc/apache

# command line overrides
[ -n "$1" ] && name=$1
[ -n "$2" ] && ca=$2
[ -n "$3" ] && apa=$3

# do not touch this!
support=/usr/share/apache/mod_ssl

seen=
for i in crt csr key prm; do
	mkdir -p $apa/ssl.$i
	[ ! -f $apa/ssl.$i/$name.$i ] && continue
	echo "$apa/ssl.$i/$name.$i: already present"
	seen=yes
done

if [ -n "$seen" ]; then
	echo
	echo -n "Do you really want to overwrite the existing "
	echo -n "certificate for $name? [y/N]: "

	read ans
	ans=`echo $ans | tr A-Z a-z`
	case "$ans" in
		y|yes)
			echo
			;;
		*)
			echo
			exit 1
			;;
	esac
fi

echo "What type of certificate do you want to create?"
echo
echo "  1. dummy     (dummy self-signed Snake Oil cert)"
echo "  2. test      (test cert signed by Snake Oil CA)"
echo "  3. custom    (custom cert signed by own CA)"
echo "  4. existing  (existing cert)"
echo
echo
echo "Use  dummy     when you are a vendor package maintainer,"
echo "     test      when you are an admin but want to do tests only,"
echo "     custom    when you are an admin willing to run a real server"
echo "     existing  when you are an admin who upgrades a server."
echo
echo "Normally you would choose 2."
echo
echo -n "your choice: "
type=""
while read ans; do
	case "$ans" in
		1) type=dummy ;;
		2) type=test ;;
		3) type=custom ;;
		4) type=existing ;;
	esac
	[ "$type" ] && break || echo "your choice is not valid, please enter a number"
	echo -n "your choice: "
done

crt=
key=
algo=
if [ "$type" = "existing" ]; then
	echo -n "Type the file name of your certificate: "
	crt=""
	while read crt; do
		[ "$crt" ] && break || echo "your choice is not valid, please enter a file name"
		echo -n "Type the file name of your certificate: "
	done
		
	echo -n "Type the full path name of your key (if any), otherwise press enter: "
	key=
	read key
else
	echo "Which algorithm should be used to generate required key(s)?"
	echo
	echo "  1. RSA"
	echo "  2. DSA"
	echo
	echo "Normally you would choose 1."
	echo
	echo -n "your choice: "
	algo=""
	while read ans; do
		case "$ans" in
			1) algo=rsa ;;
			2) algo=dsa ;;
		esac
		[ "${algo}" ] && break || echo "your choice is not valid, please enter a number"
		echo -n "your choice: "
	done
fi

view=
${support}/mkcert.sh openssl ${support} ${type} "${algo}" "${crt}" "${key}" "${view}" "${apa}" "${name}" "${ca}"
rm -rf .mkcert.serial
